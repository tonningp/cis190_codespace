##!/usr/bin/env -S bash -e

if [ -z "$TMUX" ]; then
    exec tmux new-session "$0"
fi

# Your script body here

export TOP_DIR="$(dirname "$(realpath "$0")")"

display_modules() {
    # Collect module list (strip ./, keep relative paths)
    mapfile -t modules < <(find . -mindepth 1 -maxdepth 2 -type d -name "*module*" | sed 's|^\./||' | sort -u)

    modules=("Quit" "${modules[@]}")  # Add "Quit" option at the beginning
    # Exit if no modules found
    if [[ ${#modules[@]} -eq 0 ]]; then
        echo "No modules found."
        exit 1
    fi

    # Build options array for dialog (tag=number, item=path)
    OPTIONS=()
    for i in "${!modules[@]}"; do
        OPTIONS+=("$i" "${modules[$i]}")
    done

    # Show dialog menu
    selection=$(dialog --clear \
        --backtitle "Select Module" \
        --title "Available Modules" \
        --menu "Choose a module:" 20 70 12 \
        "${OPTIONS[@]}" \
        2>&1 >/dev/tty)
    echo "${modules[$selection]}"
}

target_dir=""
echo "üöÄ Starting the exercises ..."
if [[ $# -ne 0 ]]; then
  echo "Usage: $0"
  target_dir=$1

fi


cd "$(dirname "$TOP_DIR")/missions"
module=$(display_modules)
export module
while [[ -n "$module" && "$module" != 'Quit' ]]; do
    cd "$module"
    #echo "This script starts the exercises in the current module."
    source "$TOP_DIR/environment.sh"
    if [[ ${BASE_DIR} != *module* ]]; then
      echo "‚ùå This script must be run in a module directory."
      echo "Please navigate to a module directory and try again."
      echo $(ls -1 ${BASE_DIR})
      exit 1
    fi
    $module_start
    cd "$(dirname "$TOP_DIR")/missions"
    clear && tput sgr0
    module=$(display_modules)
done
clear
#fi
