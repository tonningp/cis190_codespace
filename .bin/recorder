#!/bin/bash

# Timestamp for log uniqueness
TIMESTAMP="$(date +%Y%m%d_%H%M%S)"

TARGET_SCRIPT="$1"


if [[ ! -d "$LOG_BASE" ]]; then
    mkdir -p "$LOG_BASE"
fi
# Strip path and extension to build log names
export BASE_NAME="$(basename "$TARGET_SCRIPT" .sh)"
: "${BASE_NAME:=bash}"

# File names
export LOG_BASE="${LOG_BASE}"
export LOG_FILE="${LOG_BASE}/${BASE_NAME}_${TIMESTAMP}.log"
export HIST_FILE="${LOG_BASE}/${BASE_NAME}_${TIMESTAMP}.history.txt"

if [[ ! -d "${BASE_DIR}/home" ]]; then
  mkdir -p ${BASE_DIR}/home
fi

if [[ ! -d "${BASE_DIR}/.profile" ]]; then
    mkdir -p "${BASE_DIR}/.profile"
fi
export RCFILE="${BASE_DIR}/.profile/bashrc"
if [[ -f $RCFILE ]];then
    rm $RCFILE
fi
cat > ${RCFILE} <<EOF
source ${TOP_DIR}/bashrc
cmd_hook() {
  if [[ -n "$AFTER_COMMANDS" ]]; then
       eval "$AFTER_COMMANDS"
  fi
  echo
  echo
  echo -e "\e[30;47mTRAINING SHELL\e[0m"
  echo -e "\e[30;47mWhen you have finished your tasks, type exit and press Enter or press Ctrl+D.\e[0m"
  echo
}
export PROMPT_COMMAND="cmd_hook"
export CURRENT_LAB=${BASE_NAME}
export NO_COLOR=1
unset LS_COLORS
export HISTFILE="${HIST_FILE}"
export HISTTIMEFORMAT="%F %T"
export MANWIDTH=80
export PS1="$ "
alias ls='ls --color=never'
alias grep='grep --color=never'
alias passwd='sim_passwd.sh'
alias mdview='python3 -m rich.markdown -w 80 -y'
alias start='echo "Cannot run start command in this training shell."'
alias lab="clear;echo \"Reading: ${BASE_NAME}\" && mdview $MARKDOWN_DIR/$BASE_NAME.md"
if [[ -d "${BASE_DIR}/home" ]]; then
  :
else
  mkdir -p ${BASE_DIR}/home
fi
cd ${BASE_DIR}/home
EOF

export STARTUP_OPTIONS="--rcfile ${RCFILE}"
# Check if file exists and is executable
if [[ ! -f "$TARGET_SCRIPT" || ! -x "$TARGET_SCRIPT" ]]; then
if [[ ! -d "${BASE_DIR}/home" ]]; then
    mkdir -p "${BASE_DIR}/home"
fi
	script -q -c  "cd ${BASE_DIR}/home && echo && exec bash ${STARTUP_OPTIONS}" "$LOG_FILE"
else
# Start a new shell with the target script
# Notify user
# Set up history logging
  script -q -c "cd ${BASE_DIR}/home && echo && exec bash ${STARTUP_OPTIONS} $TARGET_SCRIPT" "$LOG_FILE"
fi

echo "âœ… Topic Session complete."
